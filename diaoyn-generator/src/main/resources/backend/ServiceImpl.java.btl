package ${packageName}.service.impl;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import jakarta.annotation.Resource;
import org.springframework.stereotype.Service;
import ${packageName}.entity.${className};
import ${packageName}.mapper.${className}Mapper;
import ${packageName}.service.${className}Service;

import java.io.Serializable;
import java.util.List;

/**
 * ${tableComment}(${className})ServiceImpl接口实现类
 *
 * @author ${authorName}
 * @Date ${createTime}
 **/
@Service
public class ${className}ServiceImpl implements ${className}Service {

    @Resource
    private ${className}Mapper ${classNameCamelCase}Mapper;

    @Override
    public PageInfo<${className}> page(${className}QueryReq req) {
        PageHelper.startPage(req.getPageNo(), req.getPageSize());
        ${className} ${classNameCamelCase} = new ${className}();
        BeanUtil.copyProperties(req, ${classNameCamelCase});
        List<${className}> list = ${classNameCamelCase}Mapper.queryList(${classNameCamelCase});
        return new PageInfo<>(list);
    }

    @Override
    public List<${className}> list() {
        return ${classNameCamelCase}Mapper.queryList(null);
    }

    @Override
    public ${className} getById(Integer id) {
        return ${classNameCamelCase}Mapper.selectByPrimaryKey(id);
    }

    @Override
    public void add(${className}Req req) {
        ${className} ${classNameCamelCase} = BeanUtil.copyProperties(req, ${className}.class);
        ${classNameCamelCase}.setId(null);
        ${className}Mapper.insert(${classNameCamelCase});
    }

    @Override
    public void updateById(${className}Req req) {
        ${className} ${classNameCamelCase} = BeanUtil.copyProperties(req, ${className}.class);
        ${className}Mapper.updateByPrimaryKeySelective(${classNameCamelCase});
    }

    @Override
    public void delete(IdsReq req) {
        ${className}Mapper.deleteByIds(req.getIds());
    }
}
