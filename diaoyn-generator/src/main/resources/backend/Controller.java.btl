package ${packageName}.controller;

import com.diaoyn.ValidGroup;
import ${packageName}.entity.${className};
import ${packageName}.service.${className}Service;
import com.github.pagehelper.PageInfo;
<% if(swagger) { %>
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
<% } else if(springdoc) { %>
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.tags.Tag;
<% } %>
import jakarta.annotation.Resource;
import org.springframework.http.RespResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import java.io.Serializable;
import java.util.List;

/**
 * ${tableComment}(${className})Controller控制层
 *
 * @author ${authorName}
 * @Date ${createTime}
 */

<% if(swagger) { %>
@Api(tags = "${tableComment}")
<% } else if(springdoc) { %>
@Tag(name = "${tableComment}")
<% } %>
@Validated
@RestController
@RequestMapping("/${bizName}")
public class ${className}Controller {

    /**
     * 服务对象
     */
    @Resource
    private ${className}Service ${classNameCamelCase}Service;

    /**
     * 分页查询所有${tableComment}
     *
     * @param req   请求参数
     * @return 所有${tableComment}
     */
    <% if(swagger) { %>
    @ApiOperation("分页查询所有${tableComment}")
    <% } else if(springdoc) { %>
    @Operation(summary = "分页查询所有${tableComment}")
    <% } %>
    @GetMapping("/page")
    public RespResult<PageInfo<${className}>> page(${className}QueryReqDTO req) {
        return RespResult.success(${classNameCamelCase}Service.page(req));
    }

    /**
     * 查询所有${tableComment}
     *
     * @return 所有${tableComment}
     */
    <% if(swagger) { %>
    @ApiOperation("查询所有${tableComment}")
    <% } else if(springdoc) { %>
    @Operation(summary = "查询所有${tableComment}")
    <% } %>
    @GetMapping
    public RespResult<List<${className}>> list() {
        return RespResult.success(${classNameCamelCase}Service.list());
    }

    /**
     * 通过${tableComment}主键查询单条数据
     *
     * @param id ${tableComment}主键
     * @return 单条数据
     */
    <% if(swagger) { %>
    @ApiOperation("通过主键查询单条${tableComment}")
    <% } else if(springdoc) { %>
    @Operation(summary = "通过主键查询单条${tableComment}")
    <% } %>
    @GetMapping("/{id}")
    @ApiImplicitParam(name = "id", value = "主键id", example = "1", dataType = "string", required = true)
    public RespResult<${className}> getById(@PathVariable Serializable id) {
        return RespResult.success(${classNameCamelCase}Service.getById(id));
    }

    /**
     * 添加${tableComment}
     *
     * @param req 请求对象
     * @return 添加结果
     */
    <% if(swagger) { %>
    @ApiOperation("添加${tableComment}")
    <% } else if(springdoc) { %>
    @Operation(summary = "新增${tableComment}")
    <% } %>
    @PostMapping("/add")
    public RespResult<Void> add(@RequestBody ${className}ReqDTO req) {
        ${classNameCamelCase}Service.add(req);
        return RespResult.success();
    }

    /**
      * 修改${tableComment}
      *
      * @param req 请求对象
      * @return 修改结果
      */
    <% if(swagger) { %>
    @ApiOperation("修改${tableComment}")
    <% } else if(springdoc) { %>
    @Operation(summary = "修改${tableComment}")
    <% } %>
    @PostMapping("/update")
    public RespResult<Void> updateById(@Validated(value = ValidGroup.Update.class) @RequestBody ${className}ReqDTO req) {
        ${classNameCamelCase}Service.updateById(req);
        return RespResult.success();
    }
  
    /**
     * 删除${tableComment}
     *
     * @param req 请求对象
     * @return 删除结果
     */
    <% if(swagger) { %>
    @ApiOperation("删除${tableComment}")
    <% } else if(springdoc) { %>
    @Operation(summary = "删除${tableComment}")
    <% } %>
    @PostMapping("/delete")
    public RespResult<Void> delete(@RequestBody IdsReqDTO req) {
        ${classNameCamelCase}Service.delete(req);
        return RespResult.success();
    }

}
